@model vinci_novo.Models.users
@{
    ViewBag.Title = "usuários | Edit";
    Layout = "~/Views/Shared/_LayoutAdm.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="page page-forms-wizard">

    <div class="pageheader">
        <h2>Editar Usuário <span>// <a href="@Url.RouteUrl(new { controller = "user", action = "Index" })">ADMINISTRAR USUÁRIOS</a></span></h2>
    </div>

    <!-- page content -->
    <div class="pagecontent">
        <div class="form-container">
            @using (Html.BeginForm("Edit", "user", FormMethod.Post, new { @id = "theForm", enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="form-group col-md-12">
                        <label for="nome">Nome: </label>
                        <input type="text" name="name" id="nome" value="@Model.name" class="form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <label for="email">Email: </label>
                        <input type="text" name="email" id="email" value="@Model.email" class="form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <label for="tipo">Tipo de Usuário</label>
                        <select name="type" id="tipo" class="form-control mb-10">
                            <option value="Institucional" @if (Model.type == "Institucional") { Write("selected='selected'"); }>Institucional</option>
                            <option value="Compliance" @if (Model.type == "Compliance") { Write("selected='selected'"); }>Compliance</option>
                            <option value="Middle Office" @if (Model.type == "Middle Office") { Write("selected='selected'"); }>Middle Office</option>
                            <option value="RH" @if (Model.type == "RH") { Write("selected='selected'"); }>RH</option>
                            <option value="Super Administrador" @if (Model.type == "Super Administrador") { Write("selected='selected'"); }>Super Admin</option>
                        </select>
                    </div>
                </div>
                <br>
                <br>
                <button type="submit" class="btn btn-cyan btn-ef btn-ef-5 btn-ef-5b mb-10">
                    <i class="fa fa-floppy-o"></i>
                    <span>Salvar</span>
                </button>
            }
        </div>
    </div>

    <div class="pagecontent">
        <div class="form-container">
            @using (Html.BeginForm("EditPw", "user", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="hidden" name="iduser" value="@Model.id" />
                <div class="row">
                    <div class="form-group col-md-12">
                        <label for="nome">Alterar senha: </label>
                        <input type="password" name="PasswordEdit" id="nome" value="" class="form-control">
                    </div>
                </div>
                <button type="submit" class="btn btn-cyan btn-ef btn-ef-5 btn-ef-5b mb-10">
                    <i class="fa fa-floppy-o"></i>
                    <span>Alterar senha</span>
                </button>
            }
        </div>
    </div>
</div>

        @*@using (Html.BeginForm("Edit", "user", FormMethod.Post, new { @id = "theForm", enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary(true)
                <fieldset>
                    <legend>usuários</legend>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.nome)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.nome, new { @class = "medium-input" })
                        @Html.ValidationMessageFor(model => model.nome)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.email)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.email, new { @class = "medium-input" })
                        @Html.ValidationMessageFor(model => model.email)
                    </div>

                    <div class="editor-label">
                        tipo de usuário
                    </div>
                    <div class="editor-field">
                        <select name="tipo_usuario">
                            <option value="0">Selecione o tipo de usuário:</option>
                            <option value="Super Administrador" @if (Model.tipo_usuario == "Super Administrador") { Write("selected='selected'"); }>Super Administrador</option>
                            <option value="RH" @if (Model.tipo_usuario == "RH") { Write("selected='selected'"); }>RH</option>
                            <option value="Middle Office" @if (Model.tipo_usuario == "Middle Office") { Write("selected='selected'"); }>Middle Office</option>
                            <option value="Compliance" @if (Model.tipo_usuario == "Compliance") { Write("selected='selected'"); }>Compliance</option>
                            <option value="Institucional" @if (Model.tipo_usuario == "Institucional") { Write("selected='selected'"); }>Institucional</option>
                        </select>
                    </div>

                    <div class="editor-field">
                        @if (Model.ativo == 1)
                        {
                            <label>@Html.RadioButtonFor(model => model.ativo, 0)Inativo</label>
                            <label>@Html.RadioButtonFor(model => model.ativo, 1, new { @checked = "checked" })Ativo</label>
                        }
                        else
                        {
                            <label>@Html.RadioButtonFor(model => model.ativo, 0, new { @checked = "checked" })Inativo</label>
                            <label>@Html.RadioButtonFor(model => model.ativo, 1)Ativo</label>
                        }
                    </div>


                    <p>
                        <input type="submit" value="Adicionar" />
                    </p>

                </fieldset>
            }*@
        @*
            <div class="editor-label">
                @Html.LabelFor(model => model.senha)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(model => model.senha, new { @class = "medium-input" })
                @Html.ValidationMessageFor(model => model.senha)
            </div>
        *@
